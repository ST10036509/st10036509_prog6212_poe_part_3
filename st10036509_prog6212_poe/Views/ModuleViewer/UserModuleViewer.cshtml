@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    var jsonModule = Json.Serialize(ViewBag.SelectedModule);
}
<div class="containor">
    <nav class="navbar navbar-expand-sm navbar-light">
        <div class="container-fluid">
            <object data="~/images/h4u_icon_02_text_green.svg"
                    width="40"
                    height="40"
                    style="position: absolute; top: 0; left: 0; margin-left: 10px; margin-top: 5px">
            </object>
            <a class="navbar-brand" style="margin-left: 50px; font-weight: bold">HoursForYou</a>
            <div class="navbar-collapse">
                <ul class="navbar-nav flex-grow-1">
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="About" asp-route-userID="@ViewBag.UserID">About</a>
                    </li>
                    <li>
                        <label style="font-size: 25px; font-weight: lighter; color: gray">|</label>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="Semester" asp-action="SemesterCreation" asp-route-userID="@ViewBag.UserID">Create Semester</a>
                    </li>
                    <li>
                        <label style="font-size: 25px; font-weight: lighter; color: gray">|</label>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-dark" asp-area="" asp-controller="SemesterPlanner" asp-action="UserSemesterPlanner" asp-route-userID="@ViewBag.UserID">Planner</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
    <div class="rectangle" style=" margin-top: 150px; background-color: white; opacity: 90%; min-height: 600px; min-width: 900px; align-content: center">
        <div class="block" style="width: 100%">
            <form asp-action="UserModuleViewer" method="post">
                <form>
                    <div class="row">
                        <h1 class="display-4" style="margin-bottom: 25px">@ViewBag.SelectedModule.ModuleName:</h1>
                    </div>
                    <div class="row">
                        <p style="color: green; margin-top: 20px">Select the week in which you want to see the hours you have left to complete.</p>
                    </div>
                    <div class="row">
                        <select id="weekDropDown" name="selectedWeek" style="height: 35px; text-align: center; font-size: 20px; font-weight: bold; background-color: ghostwhite">
                            @for (int week = 1; week <= ViewBag.SelectedModule.CompletedHours.Count; week++)
                            {
                                <option value="@week">Week @week</option>
                            }
                        </select>
                    </div>
                    <div class="row">
                        <h1 class="display-7" style="margin-bottom: 25px; margin-top: 25px">Completed Hours:</h1>
                    </div>
                    <div class="row">
                         <p class="display-2" style="margin-top: 5px" id="selectedWeekHoursCompleted"></p>
                    </div>
                    <hr style="margin-top: 25px; height: 2px"/>
                    <div class="row">
                        <h1 class="display-7" style="margin-bottom: 25px; margin-top: 25px">Add Hours:</h1>
                    </div>
                    <div class="row">
                        <p style="color: green; margin-top: 10px">Enter the number of hours and the date you completed them in order to add it to the module for the week you are currently in.</p>
                    </div>
                    <div class="row">
                        <label for="hours" style="font-size: 20px; color: gray">Hours:</label>
                        <input id="hours" name="hours" class="form-control" type="number" required />
                    </div>
                    <div class="row">
                        <label for="selectedDate" style="font-size: 20px; color: gray">Date:</label>
                        <input id="selectedDate" name="selectedDate" class="form-control" type="date" required />
                    </div>
                    <div class="row" style="margin-bottom: 20px; max-width: 660px; margin-right: auto; margin-left: auto">
                        <button type="submit" id="addHoursButton" class="submit_button"
                                asp-route-userID="@ViewBag.UserID" asp-route-semesterID="@ViewBag.SemesterID"
                                asp-route-moduleID="@ViewBag.ModuleID" asp-route-module="@jsonModule"
                                style="height: 35px; background-color: #77d17f">
                            Add Hours
                        </button>
                        <input type="hidden" id="moduleJson" name="moduleJson" value='@jsonModule' />
                    </div>
                    <div class="row" style="margin-bottom: 20px;margin-top: 20px; max-width: 660px; margin-right: auto; margin-left: auto">
                        <button type="button" id="back" class="default_button"
                                style="height: 35px; background-color: red" onclick="location.href='@Url.Action("UserModulePlanner", "ModulePlanner", new {@ViewBag.UserID, @ViewBag.SemesterID})'">
                            Back
                        </button>
                    </div>
                    @if (TempData["AlertMessage"] != null)
                    {
                        <script>
                            alert('@TempData["AlertMessage"]');
                        </script>
                    }
                </form>
            </form>
        </div>
    </div>       
</div>
<script>
    const weekDropdown = document.getElementById('weekDropDown');
    const selectedWeekHoursCompleted = document.getElementById('selectedWeekHoursCompleted');
    const moduleCompletedHours = JSON.parse('@Html.Raw(Json.Serialize(ViewBag.SelectedModule.CompletedHours))');

    weekDropdown.addEventListener('change', function () {
        const selectedWeek = parseInt(this.value);
        let output = '';

        for (const [week, completedHours] of Object.entries(moduleCompletedHours)) {
            if (parseInt(week) === selectedWeek - 1) {
                output += `${completedHours}/ ${@ViewBag.SelectedModule.SelfStudyHours}\n`;
            }
        }

        selectedWeekHoursCompleted.textContent = output;

        var dateInput = document.getElementById('selectedDate');
        var startDate = new Date(new Date('@ViewBag.SelectedModule.SemesterStartDate').getTime() + (7 * selectedWeek * 24 * 60 * 60 * 1000));
        var endDate = new Date(startDate.getFullYear(), startDate.getMonth(), startDate.getDate() + 6);
        dateInput.min = formatDate(startDate);
        dateInput.max = formatDate(endDate);
    });

    weekDropdown.dispatchEvent(new Event('change'));
s
    function formatDate(date) {
        var year = date.getFullYear();
        var month = ('0' + (date.getMonth() + 1)).slice(-2);
        var day = ('0' + date.getDate()).slice(-2);
        return year + '-' + month + '-' + day;
    }
</script>






    